using ElementSuite.Common;
using ElementSuite.Common.Interface;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ElementSuite.Core.Internal
{

    ////------------------------------------------------------------------------------
    //// <auto-generated>
    ////     This code was generated by a tool.
    ////     Runtime Version:4.0.30319.17929
    ////
    ////     Changes to this file may cause incorrect behavior and will be lost if
    ////     the code is regenerated.
    //// </auto-generated>
    ////------------------------------------------------------------------------------

    //[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://ElementSuite.Common", ClrNamespace="elementsuite.common")]

    //namespace elementsuite.common
    //{
    //    using System.Runtime.Serialization;


    //    [System.Diagnostics.DebuggerStepThroughAttribute()]
    //    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    //    [System.Runtime.Serialization.DataContractAttribute(Name="WorkQueueInfo", Namespace="http://ElementSuite.Common")]
    //    public partial class WorkQueueInfo : object, System.Runtime.Serialization.IExtensibleDataObject
    //    {

    //        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    //        private System.Uri WorkQueueLocationField;

    //        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
    //        {
    //            get
    //            {
    //                return this.extensionDataField;
    //            }
    //            set
    //            {
    //                this.extensionDataField = value;
    //            }
    //        }

    //        [System.Runtime.Serialization.DataMemberAttribute()]
    //        public System.Uri WorkQueueLocation
    //        {
    //            get
    //            {
    //                return this.WorkQueueLocationField;
    //            }
    //            set
    //            {
    //                this.WorkQueueLocationField = value;
    //            }
    //        }
    //    }
    //}


    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    //[System.ServiceModel.ServiceContractAttribute(Namespace="http://ElementSuite.Common.Interface", ConfigurationName="IWorker")]
    //public interface IWorker
    //{

    //    [System.ServiceModel.OperationContractAttribute(Action="http://ElementSuite.Common.Interface/IWorker/RequestWorkExecution", ReplyAction="http://ElementSuite.Common.Interface/IWorker/RequestWorkExecutionResponse")]
    //    void RequestWorkExecution(elementsuite.common.WorkQueueInfo workQueueInfo);

    //    [System.ServiceModel.OperationContractAttribute(Action="http://ElementSuite.Common.Interface/IWorker/RequestWorkExecution", ReplyAction="http://ElementSuite.Common.Interface/IWorker/RequestWorkExecutionResponse")]
    //    System.Threading.Tasks.Task RequestWorkExecutionAsync(elementsuite.common.WorkQueueInfo workQueueInfo);
    //}

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkerChannel : IWorker, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkerClient : System.ServiceModel.ClientBase<IWorker>, IWorker
    {

        public WorkerClient()
        {
        }

        public WorkerClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public WorkerClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public WorkerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public WorkerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public void RequestWorkExecution(WorkQueueInfo workQueueInfo)
        {
            base.Channel.RequestWorkExecution(workQueueInfo);
        }

        //public System.Threading.Tasks.Task RequestWorkExecutionAsync(WorkQueueInfo workQueueInfo)
        //{
        //    return base.Channel.RequestWorkExecutionAsync(workQueueInfo);
        //}
    }
}