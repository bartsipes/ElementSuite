<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor"/>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <appSettings>
    <add key="log4net.Internal.Debug" value="true" />
    <add key="ElementSuite.DistributedWorkQueuePort" value="51362"/>
    <add key="ElementSuite.DistributedWorkQueueContextPort" value="51361"/>
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
  <castle>
    <components>
      <component id="ServiceFactory" service="ElementSuite.Common.Interface.IServiceLocator, ElementSuite.Common" type="ElementSuite.Core.Service.ServiceFactory, ElementSuite.Core" lifestyle="singleton" />
      <component id="StartupView" service="ElementSuite.Core.Interface.IStartupView, ElementSuite.Core" type="ElementSuite.UI.MainWindow, ElementSuite.UI" lifestyle="singleton" />
      <component id="WorkService" service="ElementSuite.Addin.Interface.IWorkService, ElementSuite.Addin" type="ElementSuite.Core.Service.AddinWorkService, ElementSuite.Core" lifestyle="singleton" />
      <component id="LoggingService" service="ElementSuite.Common.Interface.ILoggingService, ElementSuite.Common" type="ElementSuite.Core.Service.LoggingService, ElementSuite.Core" lifestyle="singleton" />
      <component id="MessageService" service="ElementSuite.Common.Interface.IMessageService, ElementSuite.Common" type="ElementSuite.Core.Service.MessageService, ElementSuite.Core" lifestyle="singleton" />
      <component id="ResourceService" service="ElementSuite.Common.Interface.IResourceService, ElementSuite.Common" type="ElementSuite.Core.Service.ResourceService, ElementSuite.Core" lifestyle="singleton" />
      <!--<component id="ServiceFactory" service="ElementSuite.Common.Interface.IServiceFactory, ElementSuite.Common" type="ElementSuite.Core.Service.ServiceFactory, ElementSuite.Core">
        <parameters>
          <paramName></paramName>
        </parameters>
      </component>-->
    </components>
  </castle>
  <log4net debug="true">
		<appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender">
			<file value="rolling-log.txt" />
			<appendToFile value="true" />
      <immediateFlush value="true" />
			<maxSizeRollBackups value="10" />
			<maximumFileSize value="100" />
			<rollingStyle value="Date" />
			<staticLogFileName value="true" />
			<layout type="log4net.Layout.PatternLayout">
				<header value="[Header]&#13;&#10;" />
				<footer value="[Footer]&#13;&#10;" />
				<conversionPattern value="%date [%thread] %-5level %logger [%ndc] - %message%newline" />
			</layout>
		</appender>
    <appender name="LogFileAppender" type="log4net.Appender.FileAppender">
			<file value="log-file.txt" />
			<!-- Example using environment variables in params -->
			<!-- <file value="${TMP}\log-file.txt" /> -->
			<appendToFile value="true" />
			<!-- An alternate output encoding can be specified -->
			<!-- <encoding value="unicodeFFFE" /> -->
			<layout type="log4net.Layout.PatternLayout">
				<header value="[Header]&#13;&#10;" />
				<footer value="[Footer]&#13;&#10;" />
				<conversionPattern value="%date [%thread] %-5level %logger [%ndc] &lt;%property{auth}&gt; - %message%newline" />
			</layout>
			<!-- Alternate layout using XML			
			<layout type="log4net.Layout.XMLLayout" /> -->
		</appender>

		<root>
			<level value="WARN" />
			<appender-ref ref="RollingLogFileAppender" />
		</root>
  		<!-- Specify the level for some specific categories -->
		<logger name="ElementSuite">
			<level value="ALL" />
		</logger>
  </log4net>
  <system.serviceModel>
    <bindings>
      <udpBinding>
        <binding name="UdpBinding_IWorker" />
      </udpBinding>
    </bindings>
    <client>
      <endpoint address="soap.udp://239.255.255.255:51360/" binding="udpBinding"
          bindingConfiguration="UdpBinding_IWorker" contract="ElementSuite.Common.Interface.IWorker"
          name="UdpBinding_IWorker">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
  <system.diagnostics>
    <!--<sources>
      <source name="System.ServiceModel"
              switchValue="All"
              propagateActivity="true">
        <listeners>
          <add name="traceListener"
              type="System.Diagnostics.XmlWriterTraceListener"
              initializeData= "c:\TracesMain.svclog" />
        </listeners>
      </source>
    </sources>-->
    <trace autoflush="true">
      <listeners>
        <add name="textWriterTraceListener"
           type="System.Diagnostics.TextWriterTraceListener"
           initializeData="C:\\TestProj\\TestProjlog4net.txt" />
      </listeners>
    </trace>
  </system.diagnostics>
</configuration>
